name: MSBuild

on: [push]

jobs:
  Windows-Build:
    runs-on: windows-latest

    env:
      # Path to the solution file relative to the root of the project.
      SOLUTION_FILE_PATH: .\tools\msvc\DarkRadiant.sln
      TESTS_FILE_PATH: .\install\Tests.exe
      BUILD_CONFIGURATION: Release

    steps:
    - uses: actions/checkout@v2

    - name: Inject commit hash in version.h Header
      env:
        VERSION_HEADER_FILE: include\version.h
        SHA: ${{github.sha}}
      run: |
        $sha = $env:SHA.Substring(0, 7)
        Write-Host "Writing $sha to $env:VERSION_HEADER_FILE"
        $replaced = Get-Content $env:VERSION_HEADER_FILE | % { if ($_ -match '#define RADIANT_VERSION "\d+.\d+.\d+([\w\d]*)"') { $_.Replace($matches[1], "rev$sha") } else { $_ } }; 
        $replaced | Out-File $env:VERSION_HEADER_FILE
      shell: powershell

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1
      
    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}  

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 /maxcpucount:4 /nodeReuse:false /p:UseSharedConfiguration=false ${{env.SOLUTION_FILE_PATH}}
      
    - name: Setup VSTest.console.exe
      uses: darenm/Setup-VSTest@v1

    - name: Run Unit Tests
      run: |
        FOR /F "tokens=* USEBACKQ" %%g IN (`powershell -Command "(Get-ChildItem -Recurse -Path 'C:\Program Files (x86)\Microsoft Visual Studio\' -Filter "GoogleTestAdapter.TestAdapter.dll" -ErrorAction SilentlyContinue).DirectoryName"`) do (SET "GTEST_ADAPTER_PATH=%%g")
        echo Test Adapter Path resolved to: %GTEST_ADAPTER_PATH%
        vstest.console.exe ${{env.TESTS_FILE_PATH}} /Platform:x64 /Logger:trx /TestAdapterPath:"%%GTEST_ADAPTER_PATH%%"
      shell: cmd
    
    - name: Generate Portable Package
      run: powershell -ExecutionPolicy ByPass .\compile_release_package.ps1 -Platform x64 -SkipBuild -GenerateSetupPackage:$false -GeneratePortablePackage:$true -OutputFolder ..\..\PortablePackage\
      shell: cmd
      working-directory: .\tools\scripts

    - name: Upload Portable Package
      uses: actions/upload-artifact@v2
      with:
        name: darkradiant-portable-package-x64
        path: |
          PortablePackage/**/*
          !PortablePackage/**/*.pdb

    - name: Upload Portable Package PDBs
      uses: actions/upload-artifact@v2
      with:
        name: darkradiant-pdb-files-x64
        path: |
          PortablePackage/**/*.pdb

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: unit-test-results
        path: TestResults\*.trx
